{"id":"tasks/2.js","dependencies":[{"name":"G:\\FrontEnd\\Beetroot\\02_files\\package.json","includedInParent":true,"mtime":1612954962320}],"generated":{"js":"/* \nВ массив сохранили 3 функции. Но вызов каждой из них \nвыводит результат = 3\nЗадача - исправить код так , чтобы вывод был таким \nfn[0](); -> 0\nfn[1](); -> 1\nfn[2](); -> 3\n❗❗❗ Данную задачу решить с использованием ES 5 (то есть без let)\n*/\nfunction buildFunctions() {\n  var out = [];\n\n  for (var i = 0; i < 3; i++) {\n    out.push(function (j) {\n      return function () {\n        return console.log(j);\n      };\n    }(i));\n  }\n\n  return out;\n}\n\nvar fn = buildFunctions(); // console.log(fn);\n\nfn[0]();\nfn[1]();\nfn[2]();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"tasks/2.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"tasks/2.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"tasks/2.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"tasks/2.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"tasks/2.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"tasks/2.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"tasks/2.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"tasks/2.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"tasks/2.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"tasks/2.js","original":{"line":11,"column":0}},{"name":"buildFunctions","generated":{"line":10,"column":9},"source":"tasks/2.js","original":{"line":11,"column":9}},{"generated":{"line":10,"column":23},"source":"tasks/2.js","original":{"line":11,"column":0}},{"generated":{"line":10,"column":26},"source":"tasks/2.js","original":{"line":11,"column":26}},{"generated":{"line":11,"column":0},"source":"tasks/2.js","original":{"line":12,"column":2}},{"name":"out","generated":{"line":11,"column":6},"source":"tasks/2.js","original":{"line":12,"column":6}},{"generated":{"line":11,"column":9},"source":"tasks/2.js","original":{"line":12,"column":9}},{"generated":{"line":11,"column":12},"source":"tasks/2.js","original":{"line":12,"column":12}},{"generated":{"line":11,"column":14},"source":"tasks/2.js","original":{"line":12,"column":2}},{"generated":{"line":13,"column":0},"source":"tasks/2.js","original":{"line":13,"column":2}},{"generated":{"line":13,"column":7},"source":"tasks/2.js","original":{"line":13,"column":7}},{"name":"i","generated":{"line":13,"column":11},"source":"tasks/2.js","original":{"line":13,"column":11}},{"generated":{"line":13,"column":12},"source":"tasks/2.js","original":{"line":13,"column":12}},{"generated":{"line":13,"column":15},"source":"tasks/2.js","original":{"line":13,"column":15}},{"generated":{"line":13,"column":16},"source":"tasks/2.js","original":{"line":13,"column":2}},{"name":"i","generated":{"line":13,"column":18},"source":"tasks/2.js","original":{"line":13,"column":18}},{"generated":{"line":13,"column":19},"source":"tasks/2.js","original":{"line":13,"column":19}},{"generated":{"line":13,"column":22},"source":"tasks/2.js","original":{"line":13,"column":22}},{"generated":{"line":13,"column":23},"source":"tasks/2.js","original":{"line":13,"column":2}},{"name":"i","generated":{"line":13,"column":25},"source":"tasks/2.js","original":{"line":13,"column":25}},{"generated":{"line":13,"column":26},"source":"tasks/2.js","original":{"line":13,"column":26}},{"generated":{"line":13,"column":28},"source":"tasks/2.js","original":{"line":13,"column":2}},{"generated":{"line":13,"column":30},"source":"tasks/2.js","original":{"line":13,"column":30}},{"name":"out","generated":{"line":14,"column":0},"source":"tasks/2.js","original":{"line":14,"column":4}},{"name":"out","generated":{"line":14,"column":4},"source":"tasks/2.js","original":{"line":14,"column":4}},{"generated":{"line":14,"column":7},"source":"tasks/2.js","original":{"line":14,"column":7}},{"name":"push","generated":{"line":14,"column":8},"source":"tasks/2.js","original":{"line":14,"column":8}},{"generated":{"line":14,"column":12},"source":"tasks/2.js","original":{"line":14,"column":4}},{"generated":{"line":14,"column":13},"source":"tasks/2.js","original":{"line":15,"column":7}},{"name":"j","generated":{"line":14,"column":23},"source":"tasks/2.js","original":{"line":15,"column":17}},{"generated":{"line":14,"column":24},"source":"tasks/2.js","original":{"line":15,"column":7}},{"generated":{"line":14,"column":26},"source":"tasks/2.js","original":{"line":15,"column":20}},{"generated":{"line":15,"column":0},"source":"tasks/2.js","original":{"line":16,"column":8}},{"generated":{"line":15,"column":13},"source":"tasks/2.js","original":{"line":16,"column":15}},{"generated":{"line":16,"column":0},"source":"tasks/2.js","original":{"line":16,"column":15}},{"name":"console","generated":{"line":16,"column":15},"source":"tasks/2.js","original":{"line":16,"column":21}},{"generated":{"line":16,"column":22},"source":"tasks/2.js","original":{"line":16,"column":28}},{"name":"log","generated":{"line":16,"column":23},"source":"tasks/2.js","original":{"line":16,"column":29}},{"generated":{"line":16,"column":26},"source":"tasks/2.js","original":{"line":16,"column":21}},{"name":"j","generated":{"line":16,"column":27},"source":"tasks/2.js","original":{"line":16,"column":33}},{"generated":{"line":16,"column":28},"source":"tasks/2.js","original":{"line":16,"column":21}},{"generated":{"line":16,"column":29},"source":"tasks/2.js","original":{"line":16,"column":15}},{"generated":{"line":17,"column":0},"source":"tasks/2.js","original":{"line":16,"column":15}},{"generated":{"line":17,"column":7},"source":"tasks/2.js","original":{"line":16,"column":8}},{"generated":{"line":18,"column":0},"source":"tasks/2.js","original":{"line":17,"column":7}},{"generated":{"line":18,"column":5},"source":"tasks/2.js","original":{"line":15,"column":6}},{"name":"i","generated":{"line":18,"column":6},"source":"tasks/2.js","original":{"line":17,"column":9}},{"generated":{"line":18,"column":7},"source":"tasks/2.js","original":{"line":15,"column":6}},{"generated":{"line":18,"column":8},"source":"tasks/2.js","original":{"line":14,"column":4}},{"generated":{"line":19,"column":0},"source":"tasks/2.js","original":{"line":19,"column":3}},{"generated":{"line":21,"column":0},"source":"tasks/2.js","original":{"line":20,"column":2}},{"name":"out","generated":{"line":21,"column":9},"source":"tasks/2.js","original":{"line":20,"column":9}},{"generated":{"line":21,"column":12},"source":"tasks/2.js","original":{"line":20,"column":2}},{"generated":{"line":22,"column":0},"source":"tasks/2.js","original":{"line":21,"column":1}},{"generated":{"line":24,"column":0},"source":"tasks/2.js","original":{"line":22,"column":0}},{"name":"fn","generated":{"line":24,"column":4},"source":"tasks/2.js","original":{"line":22,"column":6}},{"generated":{"line":24,"column":6},"source":"tasks/2.js","original":{"line":22,"column":8}},{"name":"buildFunctions","generated":{"line":24,"column":9},"source":"tasks/2.js","original":{"line":22,"column":11}},{"generated":{"line":24,"column":23},"source":"tasks/2.js","original":{"line":22,"column":25}},{"generated":{"line":24,"column":25},"source":"tasks/2.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":27},"source":"tasks/2.js","original":{"line":24,"column":0}},{"name":"fn","generated":{"line":26,"column":0},"source":"tasks/2.js","original":{"line":26,"column":0}},{"generated":{"line":26,"column":2},"source":"tasks/2.js","original":{"line":26,"column":2}},{"generated":{"line":26,"column":3},"source":"tasks/2.js","original":{"line":26,"column":3}},{"generated":{"line":26,"column":4},"source":"tasks/2.js","original":{"line":26,"column":2}},{"generated":{"line":26,"column":5},"source":"tasks/2.js","original":{"line":26,"column":0}},{"name":"fn","generated":{"line":27,"column":0},"source":"tasks/2.js","original":{"line":27,"column":0}},{"generated":{"line":27,"column":2},"source":"tasks/2.js","original":{"line":27,"column":2}},{"generated":{"line":27,"column":3},"source":"tasks/2.js","original":{"line":27,"column":3}},{"generated":{"line":27,"column":4},"source":"tasks/2.js","original":{"line":27,"column":2}},{"generated":{"line":27,"column":5},"source":"tasks/2.js","original":{"line":27,"column":0}},{"name":"fn","generated":{"line":28,"column":0},"source":"tasks/2.js","original":{"line":28,"column":0}},{"generated":{"line":28,"column":2},"source":"tasks/2.js","original":{"line":28,"column":2}},{"generated":{"line":28,"column":3},"source":"tasks/2.js","original":{"line":28,"column":3}},{"generated":{"line":28,"column":4},"source":"tasks/2.js","original":{"line":28,"column":2}},{"generated":{"line":28,"column":5},"source":"tasks/2.js","original":{"line":28,"column":0}}],"sources":{"tasks/2.js":"/* \nВ массив сохранили 3 функции. Но вызов каждой из них \nвыводит результат = 3\nЗадача - исправить код так , чтобы вывод был таким \nfn[0](); -> 0\nfn[1](); -> 1\nfn[2](); -> 3\n❗❗❗ Данную задачу решить с использованием ES 5 (то есть без let)\n*/\n\nfunction buildFunctions() {\n  let out = [];\n  for (var i = 0; i < 3; i++) {\n    out.push(\n      (function (j) {\n        return () => console.log(j);\n      })(i)\n    );\n  }\n  return out;\n}\nconst fn = buildFunctions();\n\n// console.log(fn);\n\nfn[0]();\nfn[1]();\nfn[2]();\n"},"lineCount":null}},"error":null,"hash":"8ba9604a55778b965a3254340455c7de","cacheData":{"env":{}}}